By default, Spring Boot application uses HTTP 8080 port when the application 
starts up if not specified in application.properties file explicitly.

We need to follow below steps to configure the Https and port 445 in spring boot application:

1. Obtain the SSL Certificate - either create a self-signed certificate or obtain from certificate authority

2. Enable HTTPS and 445 port.

To create a self-signed certificate, Java Run Time environment comes bundled with certificate management utility key tool. 
This utility tool is used to create a Self-Signed certificate. It is shown in the code given here − 

keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
Enter keystore password:
   Re-enter new password:
   What is your first and last name?
   [Unknown]:
   What is the name of your organizational unit?
   [Unknown]:
   What is the name of your organization?
   [Unknown]:
   What is the name of your City or Locality?
   [Unknown]:
   What is the name of your State or Province?
   [Unknown]:
   What is the two-letter country code for this unit?
   [Unknown]:
   Is CN = Unknown, OU=Unknown, O = Unknown, L = Unknown, ST = Unknown, C = Unknown correct?
   [no]: yes

This code will generate a PKCS12 keystore file named as keystore.p12 and the certificate alias name is tomcat.

Configure HTTPS
We need to provide the server port as 443, key-store file path, key-store-password, key-store-type 
and key alias name into the application.properties file. Below is the code −

server.port: 443
server.ssl.key-store: keystore.p12
server.ssl.key-store-password: springboot
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat

We can create an executable JAR file and run the spring boot application by using below command:

mvn clean install

After “BUILD SUCCESSFUL”, we can find the JAR file under the build/libs directory.

Now, run the JAR file by using the following command −

java –jar <JARFILE>
Now, the application has started on the Tomcat port 443 with https as shown


Keytool is a certificate management utility provided together with the JDK. To check it, try running the 
command keytool --help from your Terminal prompt. 

Note that if we are on Windows, we might need to launch it from the \bin folder. 